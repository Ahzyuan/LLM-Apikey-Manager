#!/usr/bin/env bash

# LAM (LLM Api-key Manager)
# Desc: An out-of-box, lite, secure terminal tool to 
#       manage LLM API keys, base URLs and other sensitive credentials
# Author: Ahzyuan
# Repo: https://github.com/Ahzyuan/LLM-Apikey-Manager

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

if [[ $EUID -eq 0 ]] && [[ -n "${SUDO_USER:-}" ]]; then
    # Running as root via sudo - use the original user's home
    USER_HOME=$(eval echo ~$SUDO_USER)
    CONFIG_DIR="$USER_HOME/.config/lam"
elif [[ $EUID -eq 0 ]]; then
    # Running as actual root user
    CONFIG_DIR="/root/.config/lam"
else
    # Running as regular user
    CONFIG_DIR="$HOME/.config/lam"
fi

AUTH_FILE="$CONFIG_DIR/.auth"
DB_FILE="$CONFIG_DIR/profiles.db"   # SQLite database file 
SESSION_FILE="$CONFIG_DIR/.session"  # store session status, age, etc

# Security constants
readonly MAX_PASSWORD_LENGTH=256
readonly MIN_PASSWORD_LENGTH=8
readonly MAX_INPUT_LENGTH=4096
readonly SESSION_TIMEOUT=1800  # 30 minutes default

# Load all modules
LIB_DIR="$SCRIPT_DIR/lib"
if [[ ! -d "$LIB_DIR" ]]; then
    echo "Error: Library directory '$LIB_DIR' not found" >&2
    exit 1
else
    while IFS= read -r -d '' module_file; do
        if [[ -f "$module_file" && -r "$module_file" ]]; then
            source "$module_file"
        else
            echo "Warning: Cannot read module file '$module_file'" >&2
        fi
    done < <(find "$LIB_DIR" -name "*.sh" -type f -print0 | sort -z)
fi

# Set up trap for gc & error trace back
trap cleanup_temp_resources EXIT # trap for cleanup on exit

# Main function with enhanced error handling
main() {
    
    check_dependencies
    
    local command="${1:-help}"
    
    # Commands that don't require initialization
    case "$command" in
        "init"|"update"|"uninstall"|"help"|"-h"|"version"|"-v")
            # These commands can run without initialization
            ;;
        *)
            # All other commands require initialization
            check_initialization
            ;;
    esac
    
    case "$command" in
        "init")
            cmd_init
            ;;
        "add")
            cmd_add "${2:-}"
            ;;
        "list"|"ls")
            cmd_list
            ;;
        "show")
            cmd_show "${2:-}"
            ;;
        "use")
            cmd_use "${2:-}"
            ;;
        "edit")
            cmd_edit "${2:-}"
            ;;
        "delete"|"del")
            cmd_delete "${2:-}"
            ;;
        "backup"|"bak")
            cmd_backup "${2:-}" "${3:-}"
            ;;
        "status")
            cmd_status
            ;;
        "update")
            cmd_update
            ;;
        "uninstall")
            cmd_uninstall
            ;;
        "help"|"-h")
            cmd_help
            ;;
        "version"|"-v")
            cmd_version
            ;;
        *)
            log_error "Unknown command: $command"
            log_info "Use 'lam help' for available commands."
            exit 1
            ;;
    esac
}

# Run main function with all arguments
main "$@"